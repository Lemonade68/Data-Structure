//  广义表的数据元素具有相对次序
//  广义表的长度：最外层包含的元素个数
//  广义表的深度：所含括号的重数    ----原子的深度为0，空表的深度为1
//      每个表的深度等于其中元素的最大深度+1          数深度时数左括号个数即可


//  任何一个非空广义表可分解为：表头与表尾
//      表头：第一个元素
//      表尾：除第一个元素外的所有元素形成的新表

//----------------------注意----------------------
// gettail()是函数，里面的广义表还有一层()！！
GetTail((a, b, c)) = (b, c);
GetHead((a, b, c)) = a;


//例：  Tail(((b,c)))=()    Head(((b,c)))=(b,c)    Head((b,c))=b    Tail((b,c))=(c)
//最后一个一定要注意！

// 广义表的表示方法

// 构造存储结构的两种分析方法：

// 一、表头表尾分析法
// 表结点：  标志域(tag)，指向表头的指针，指向表尾的指针
// 原子结点：标志域(tag)和值域

// 其实就是不停按头表，尾表分

//具体见ppt



// 二、子表分析方法
// 表结点：标志域(tag)，指向第一个元素的指针，指向下一个元素的指针
// 原子结点：标志域(tag)，数据域，指向下一个元素的指针

// 其实就是将一开始的表按逗号分，然后每个0里面再进行相同操作

// 具体见ppt