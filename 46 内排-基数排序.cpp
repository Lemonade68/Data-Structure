// 借助多关键字排序的思想来实现但关键字排序

// 1.多关键字排序问题

// def:n个记录的序列{R1,R2,...,Rn}对关键字(K0_i,K1_i,...,Kn_i)有序：
// 指对序列中任意两个记录Ri与Rj，有
// (K0_i, K1_i, ..., Kn_i) < (K0_j, K1_j, ..., Kn_j)
// 其中，K0被称为最主位关键字，Kn被称为最次位关键字

// 实现多关键字排序的算法：

// (1) 最高位优先MSD法
// 先对K0排序，并且按照K0的不同值将序列分成若干个子序列，在子序列中再对K1排序，以此类推

// (2) 最低位优先LSD法
// 先对Kn排序，然后对Kn-1排序，以此类推，直到对K0排序完成为止
// 注意LSD法的排序过程不需要根据前一个关键字的排序结果来分隔成若干个子序列
// 每次新的排序要保持上一次排序后的顺序相对不变   ---即：当（下次排序）更重要的关键字相同时，排序的顺序自然是次重要的顺序（本次排序）来排



// 2.链式基数排序（采用LSD法）
// 具体做法：
// 1.待排序记录以指针相连，成一个链表
// 2.先分配：按当前关键字位取值，将记录分配到不同的链队列中，每个队列中记录的关键字位相同
// 3.再收集：按当前关键字位从小到大将各队列首尾相连成一个链表
// 4.从最次关键字到最主关键字重复2-3步

// 实际操作：修改链表中的指针和设置队列的头尾指针



// 整体：基数排序的时间复杂度为O(d(n+rd))，  即O(n)
// 分配为O(n),收集为O(rd),分配-收集趟数为d
